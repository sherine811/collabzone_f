name: CI/CD Pipeline - Campus Portal

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      REGISTRY_NAME: campusportalacr
      IMAGE_NAME: campus_portal_site
      RESOURCE_GROUP: collabzone-rg
      AKS_NAME: campusportal-aks
      IMAGE_TAG: latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Get ACR Login Server
        id: acr
        run: |
          echo "ACR_LOGIN_SERVER=$(az acr show --name ${{ env.REGISTRY_NAME }} --query loginServer -o tsv)" >> $GITHUB_ENV

      - name: Azure Container Registry Login
        run: az acr login --name ${{ env.REGISTRY_NAME }}

      # üß© Step 6: Debug - Confirm actual folder structure
      - name: Debug - Confirm folder path
        run: |
          echo "Current working directory:"
          pwd
          echo "Listing all files and folders recursively:"
          ls -R

      # üß© Step 7: Build and Push Docker image to ACR
      - name: Build and Push Docker image to ACR
        run: |
          IMAGE_TAG=latest
          echo "Trying to enter the campus_portal_site folder..."
          cd campus_portal_site || (echo "‚ùå Folder not found! Check Step 6 output for the correct path." && exit 1)
          echo "üìÅ Current directory: $(pwd)"
          ls -la
          docker build -t ${{ env.ACR_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:$IMAGE_TAG .
          docker push ${{ env.ACR_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:$IMAGE_TAG

      - name: Set AKS context
        run: |
          az aks get-credentials \
            --resource-group ${{ env.RESOURCE_GROUP }} \
            --name ${{ env.AKS_NAME }} \
            --overwrite-existing

      - name: Update Deployment Image
        run: |
          kubectl set image deployment/campusportal-deployment \
            campusportal-container=${{ env.ACR_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} \
            --namespace default

      - name: Apply Kubernetes Manifests
        run: |
          kubectl apply -f k8s/deployment.yaml
          kubectl apply -f k8s/service.yaml

      - name: Verify Deployment
        run: |
          kubectl get pods -o wide
          kubectl get svc
