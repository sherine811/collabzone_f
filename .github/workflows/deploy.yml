name: CI/CD Pipeline - Campus Portal

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      REGISTRY_NAME: campusportalacr    # Your ACR name
      IMAGE_NAME: campus_portal_site    # Your image name
      RESOURCE_GROUP: collabzone-rg
      AKS_NAME: campusportal-aks
      ACR_LOGIN_SERVER: campusportalacr.azurecr.io   # âœ… Added this line

    steps:
      # ðŸ§© Step 1: Checkout code
      - name: Checkout repository
        uses: actions/checkout@v4

      # ðŸ§© Step 2: Azure Login
      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # ðŸ§© Step 3: Azure Container Registry Login
      - name: Azure Container Registry Login
        run: az acr login --name ${{ env.REGISTRY_NAME }}

      # ðŸ§© Step 4: Debug - List repository structure
      - name: Debug - List repository structure
        run: ls -R

      # ðŸ§© Step 5: Build and Push Docker image to ACR
      - name: Build and Push Docker image to ACR
        run: |
          IMAGE_TAG=latest
          docker build -t ${{ env.ACR_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:$IMAGE_TAG ./collabzone_f/campus_portal_site
          docker push ${{ env.ACR_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:$IMAGE_TAG

      # ðŸ§© Step 6: Set AKS context
      - name: Set AKS context
        run: |
          az aks get-credentials \
            --resource-group ${{ env.RESOURCE_GROUP }} \
            --name ${{ env.AKS_NAME }} \
            --overwrite-existing

      # ðŸ§© Step 7: Deploy to AKS
      - name: Deploy to AKS
        run: |
          kubectl apply -f ./k8s/deployment.yaml
          kubectl apply -f ./k8s/service.yaml

      # ðŸ§© Step 8: Verify Deployment
      - name: Verify Deployment
        run: kubectl get pods -o wide
